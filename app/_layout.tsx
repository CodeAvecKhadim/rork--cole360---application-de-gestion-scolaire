// Layout principal de l'application √âcole-360
// Ce fichier configure tous les providers et la navigation globale
// Il sert de point d'entr√©e pour toute l'application

// Import des d√©pendances React Query pour la gestion des requ√™tes serveur
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
// Import du syst√®me de navigation Expo Router
import { Stack } from "expo-router";
// Import des utilitaires pour l'√©cran de d√©marrage
import * as SplashScreen from "expo-splash-screen";
// Import des hooks React de base
import React, { useEffect } from "react";
// Import du provider pour les gestes tactiles
import { GestureHandlerRootView } from "react-native-gesture-handler";
// Import des contextes personnalis√©s pour l'authentification, les donn√©es et la s√©curit√©
import { AuthContext } from "@/hooks/auth-store";
import { DataContext } from "@/hooks/data-store";
import { SecurityContext } from "@/hooks/security-store";
// Import de l'initialisation Firebase
import "@/libs/firebase";

// Emp√™cher l'√©cran de d√©marrage de se cacher automatiquement
// Cela nous permet de contr√¥ler quand l'√©cran de d√©marrage dispara√Æt
SplashScreen.preventAutoHideAsync();

// Configuration du client React Query pour la gestion des requ√™tes
// Ce client g√®re le cache, les requ√™tes et les mutations de donn√©es
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: 2, // Nombre de tentatives en cas d'√©chec de requ√™te
      staleTime: 5 * 60 * 1000, // 5 minutes avant qu'une requ√™te soit consid√©r√©e comme obsol√®te
    },
  },
});

// Composant de navigation principal
function RootLayoutNav() {
  return (
    <Stack screenOptions={{ 
      headerBackTitle: "Retour", // Texte du bouton retour en fran√ßais
      headerTitleStyle: { fontWeight: '600' }, // Style du titre
    }}>
      <Stack.Screen name="(auth)" options={{ headerShown: false }} />
      <Stack.Screen name="(app)" options={{ headerShown: false }} />
    </Stack>
  );
}

// Composant racine de l'application avec tous les providers
export default function RootLayout() {
  useEffect(() => {
    // Cacher l'√©cran de d√©marrage une fois l'app charg√©e
    const hideSplashScreen = async () => {
      try {
        console.log('üî• Firebase initialis√© avec succ√®s');
        await SplashScreen.hideAsync();
      } catch (error) {
        console.warn('Erreur lors du masquage de l\'√©cran de d√©marrage:', error);
      }
    };
    
    hideSplashScreen();
  }, []);

  return (
    // Provider React Query (doit √™tre le plus haut niveau)
    <QueryClientProvider client={queryClient}>
      {/* Provider de s√©curit√© (doit √™tre avant l'authentification) */}
      <SecurityContext>
        {/* Provider d'authentification */}
        <AuthContext>
          {/* Provider de donn√©es */}
          <DataContext>
            {/* Provider pour les gestes (n√©cessaire pour certains composants) */}
            <GestureHandlerRootView style={{ flex: 1 }}>
              <RootLayoutNav />
            </GestureHandlerRootView>
          </DataContext>
        </AuthContext>
      </SecurityContext>
    </QueryClientProvider>
  );
}